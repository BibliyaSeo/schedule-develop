openapi: 3.0.0
info:
  title: Schedule Management API
  version: 1.0.0
  description: 일정, 회원, 댓글 관리 API 명세서

servers:
  - url: http://localhost:8080

paths:
  /users/signup:
    post:
      summary: 회원가입
      tags: [ User ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpUserRequestDto'
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'

  /users:
    get:
      summary: 전체 유저 조회 (또는 유저명 검색)
      tags: [ User ]
      parameters:
        - name: username
          in: query
          required: false
          schema:
            type: string
          description: 특정 사용자명으로 필터
      responses:
        '200':
          description: 유저 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDto'

  /users/{id}:
    get:
      summary: 유저 단건 조회
      tags: [ User ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 유저 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
    patch:
      summary: 비밀번호 변경
      tags: [ User ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequestDto'
      responses:
        '204':
          description: 비밀번호 변경 성공
    delete:
      summary: 유저 삭제
      tags: [ User ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 유저 삭제 성공

  /auth/login:
    post:
      summary: 로그인
      tags: [ Auth ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogInRequestDto'
      responses:
        '200':
          description: 로그인 성공
          content:
            text/plain:
              schema:
                type: string
                example: "로그인 성공"
        '401':
          description: 이메일 또는 비밀번호 불일치

  /auth/logout:
    post:
      summary: 로그아웃
      tags: [ Auth ]
      responses:
        '204':
          description: 로그아웃 성공


  /schedules:
    post:
      summary: 일정 생성
      tags: [ Schedule ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleRequestDto'
      responses:
        '201':
          description: 일정 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponseDto'
    get:
      summary: 일정 전체 조회 (또는 작성자명 검색)
      tags: [ Schedule ]
      parameters:
        - name: username
          in: query
          required: false
          schema:
            type: string
          description: 작성자명
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 일정 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScheduleResponseDto'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  last:
                    type: boolean

  /schedules/{id}:
    get:
      summary: 일정 개별 조회
      tags: [ Schedule ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 일정 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailScheduleResponseDto'
    patch:
      summary: 일정 수정
      tags: [ Schedule ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduleRequestDto'
      responses:
        '200':
          description: 일정 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponseDto'
    delete:
      summary: 일정 삭제
      tags: [ Schedule ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 일정 삭제 성공

  /schedule/{scheduleId}/comments:
    post:
      summary: 댓글 생성
      tags: [ Comment ]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestDto'
      responses:
        '201':
          description: 댓글 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseDto'
    get:
      summary: 댓글 목록 조회
      tags: [ Comment ]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 댓글 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponseDto'

  /comments/{commentId}:
    put:
      summary: 댓글 수정
      tags: [ Comment ]
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestDto'
      responses:
        '200':
          description: 댓글 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseDto'
    delete:
      summary: 댓글 삭제
      tags: [ Comment ]
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 댓글 삭제 성공

components:
  schemas:
    SignUpUserRequestDto:
      type: object
      required: [ username, email, password ]
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          description: 8자 이상, 대문자 1개 이상, 숫자 1개 이상 포함
    UpdatePasswordRequestDto:
      type: object
      required: [ oldPassword, newPassword ]
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
          description: 8자 이상, 대문자 1개 이상, 숫자 1개 이상 포함
    UserResponseDto:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserInfoDto:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
    LogInRequestDto:
      type: object
      required: [ email, password ]
      properties:
        email:
          type: string
          format: email
          description: 사용자 이메일
        password:
          type: string
          description: 사용자 비밀번호
    CreateScheduleRequestDto:
      type: object
      required: [ title, contents ]
      properties:
        title:
          type: string
          maxLength: 10
        contents:
          type: string
          maxLength: 100
    UpdateScheduleRequestDto:
      type: object
      properties:
        title:
          type: string
          maxLength: 10
        contents:
          type: string
          maxLength: 100
    ScheduleResponseDto:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: '#/components/schemas/UserInfoDto'
        title:
          type: string
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        commentCount:
          type: integer
    DetailScheduleResponseDto:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        username:
          type: string
        title:
          type: string
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponseDto'
    CommentRequestDto:
      type: object
      required: [ contents ]
      properties:
        contents:
          type: string
          maxLength: 50
    CommentResponseDto:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: '#/components/schemas/UserInfoDto'
        scheduleId:
          type: integer
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
